{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\javier.revilla.caro\\\\OneDrive - Accenture\\\\Documents\\\\Ejercicios\\\\music-player\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _jsxFileName = \"C:\\\\Users\\\\javier.revilla.caro\\\\OneDrive - Accenture\\\\Documents\\\\Ejercicios\\\\music-player\\\\src\\\\components\\\\songItem.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { play, selectSong } from '../redux/actions';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { ReactComponent as Play } from \"@svgr/webpack?-prettier,-svgo!../icons/play.svg\";\nimport { ReactComponent as Pause } from \"@svgr/webpack?-prettier,-svgo!../icons/pause.svg\";\nimport { ReactComponent as Speaker } from \"@svgr/webpack?-prettier,-svgo!../icons/speaker.svg\";\nimport Emoji from './emoji';\nimport Menu from './menu';\nvar StyledItem = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    height: 95px;\\n    display: flex;\\n    padding-left: 30px;\\n    color: \", \";\\n    background-color: \", \";\\n\\n    * {\\n        margin-right: 10px;\\n        margin-top: 10px;\\n    }\\n\\n    #playIcon {\\n        display: none;\\n    }\\n\\n    #title {\\n        width: 700px;\\n        height: 75%;\\n        h3, p {\\n            margin-top: 2px;\\n            margin-bottom: 2px;\\n        }\\n    }\\n\\n    #meta {\\n        display: flex;\\n        color: white;\\n    }\\n\\n    #explicit {\\n        color: black;\\n        margin-right: 0;\\n        background-color: white;\\n        border-radius: 3px;\\n    }\\n\\n    .ellipsis {\\n        display: none;\\n        float: right;\\n        right:90px;\\n        color: white;\\n    }\\n\\n    #date {\\n        right: 20px;\\n        margin-bottom: 70px;\\n    }\\n\\n    &:hover {\\n        background-color: black;\\n        color: \", \";\\n        #soundIcon {\\n            display: none;\\n        }\\n        #playIcon {\\n            display: block;\\n        }\\n        .ellipsis {\\n            display: block;\\n        }\\n    }\\n\"])), function (props) {\n  return props.selected ? props.theme.primaryColor : 'white';\n}, function (props) {\n  return props.selected && 'black';\n}, function (props) {\n  return props.theme.primaryColor;\n});\n\nfunction SongItem(_ref) {\n  var song = _ref.song,\n      selectedSongId = _ref.selectedSongId,\n      playing = _ref.playing,\n      playStop = _ref.playStop,\n      changeSong = _ref.changeSong;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledItem, {\n    selected: song.id === selectedSongId,\n    onClick: function onClick() {\n      // The song is selected.\n      changeSong(song); //  We verify if the clicked song was made to the current playing song.\n\n      if (song.id === selectedSongId) {\n        playStop(false);\n      } else {\n        playStop(true);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"soundIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, song.id === selectedSongId && playing ? /*#__PURE__*/React.createElement(Speaker, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 62\n    }\n  }) : /*#__PURE__*/React.createElement(Emoji, {\n    name: \"music\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 76\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"playIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, song.id === selectedSongId && playing ? /*#__PURE__*/React.createElement(Pause, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 62\n    }\n  }) : /*#__PURE__*/React.createElement(Play, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 74\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, song.name), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"meta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"explicit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, song.explicit && \"EXPLICIT\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, song.author, \" - \", song.album))), /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, song.duration.getMinutes(), \":\", song.duration.getSeconds())));\n}\n\nSongItem.defaultProps = {\n  song: {\n    id: 1,\n    name: \"Titulo\",\n    explicit: true,\n    author: \"Autor\",\n    album: \"Album\",\n    duration: new Date(0, 0, 0, 0, 2, 30),\n    like: false\n  }\n};\nSongItem.propTypes = {\n  song: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    explicit: PropTypes.bool,\n    author: PropTypes.string,\n    album: PropTypes.string,\n    duration: PropTypes.instanceOf(Date),\n    like: PropTypes.bool\n  }),\n  selectedSongId: PropTypes.number.isRequired,\n  playing: PropTypes.bool.isRequired,\n  playStop: PropTypes.func.isRequired,\n  changeSong: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    playing: state.playing,\n    selectedSongId: state.selectedSong.id\n  };\n};\n\nexport default connect(mapStateToProps, {\n  playStop: play,\n  changeSong: selectSong\n})(SongItem);","map":{"version":3,"sources":["C:/Users/javier.revilla.caro/OneDrive - Accenture/Documents/Ejercicios/music-player/src/components/songItem.js"],"names":["React","connect","play","selectSong","PropTypes","styled","Emoji","Menu","StyledItem","div","props","selected","theme","primaryColor","SongItem","song","selectedSongId","playing","playStop","changeSong","id","name","explicit","author","album","duration","getMinutes","getSeconds","defaultProps","Date","like","propTypes","shape","number","string","bool","instanceOf","isRequired","func","mapStateToProps","state","selectedSong"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AAKA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,UAAU,GAAGH,MAAM,CAACI,GAAV,ynCAKH,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACE,KAAN,CAAYC,YAA7B,GAA4C,OAAhD;AAAA,CALF,EAMQ,UAAAH,KAAK;AAAA,SAAIA,KAAK,CAACC,QAAN,IAAkB,OAAtB;AAAA,CANb,EAoDC,UAAAD,KAAK;AAAA,SAAIA,KAAK,CAACE,KAAN,CAAYC,YAAhB;AAAA,CApDN,CAAhB;;AAiEA,SAASC,QAAT,OAA4E;AAAA,MAAxDC,IAAwD,QAAxDA,IAAwD;AAAA,MAAlDC,cAAkD,QAAlDA,cAAkD;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,UAAe,QAAfA,UAAe;AACxE,sBACI,uDACI,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEJ,IAAI,CAACK,EAAL,KAAUJ,cAAhC;AAAgD,IAAA,OAAO,EAAE,mBAAM;AAC3D;AACAG,MAAAA,UAAU,CAACJ,IAAD,CAAV,CAF2D,CAI3D;;AACA,UAAIA,IAAI,CAACK,EAAL,KAAUJ,cAAd,EAA8B;AAC1BE,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,OAFD,MAEO;AACHA,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,KAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,IAAI,CAACK,EAAL,KAAYJ,cAAZ,IAA8BC,OAA9B,gBAAwC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxC,gBAAsD,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD3D,CAXJ,eAcI;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACK,EAAL,KAAYJ,cAAZ,IAA8BC,OAA9B,gBAAwC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxC,gBAAoD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzD,CAdJ,eAiBI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACM,IAAV,CADJ,eAEI;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBN,IAAI,CAACO,QAAL,IAAiB,UAAnC,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,IAAI,CAACQ,MAAT,SAAoBR,IAAI,CAACS,KAAzB,CAFJ,CAFJ,CAjBJ,eAwBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,eAyBI;AAAG,IAAA,EAAE,EAAC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcT,IAAI,CAACU,QAAL,CAAcC,UAAd,EAAd,OAA2CX,IAAI,CAACU,QAAL,CAAcE,UAAd,EAA3C,CAzBJ,CADJ,CADJ;AA+BH;;AAEDb,QAAQ,CAACc,YAAT,GAAwB;AACpBb,EAAAA,IAAI,EAAE;AACFK,IAAAA,EAAE,EAAE,CADF;AAEFC,IAAAA,IAAI,EAAE,QAFJ;AAGFC,IAAAA,QAAQ,EAAE,IAHR;AAIFC,IAAAA,MAAM,EAAE,OAJN;AAKFC,IAAAA,KAAK,EAAE,OALL;AAMFC,IAAAA,QAAQ,EAAE,IAAII,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,EAAxB,CANR;AAOFC,IAAAA,IAAI,EAAE;AAPJ;AADc,CAAxB;AAYAhB,QAAQ,CAACiB,SAAT,GAAqB;AACjBhB,EAAAA,IAAI,EAAEX,SAAS,CAAC4B,KAAV,CAAgB;AAClBZ,IAAAA,EAAE,EAAEhB,SAAS,CAAC6B,MADI;AAElBZ,IAAAA,IAAI,EAAEjB,SAAS,CAAC8B,MAFE;AAGlBZ,IAAAA,QAAQ,EAAElB,SAAS,CAAC+B,IAHF;AAIlBZ,IAAAA,MAAM,EAAEnB,SAAS,CAAC8B,MAJA;AAKlBV,IAAAA,KAAK,EAAEpB,SAAS,CAAC8B,MALC;AAMlBT,IAAAA,QAAQ,EAAErB,SAAS,CAACgC,UAAV,CAAqBP,IAArB,CANQ;AAOlBC,IAAAA,IAAI,EAAE1B,SAAS,CAAC+B;AAPE,GAAhB,CADW;AAUjBnB,EAAAA,cAAc,EAAEZ,SAAS,CAAC6B,MAAV,CAAiBI,UAVhB;AAWjBpB,EAAAA,OAAO,EAAEb,SAAS,CAAC+B,IAAV,CAAeE,UAXP;AAYjBnB,EAAAA,QAAQ,EAAEd,SAAS,CAACkC,IAAV,CAAeD,UAZR;AAajBlB,EAAAA,UAAU,EAAEf,SAAS,CAACkC,IAAV,CAAeD;AAbV,CAArB;;AAgBA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHvB,IAAAA,OAAO,EAAEuB,KAAK,CAACvB,OADZ;AAEHD,IAAAA,cAAc,EAAEwB,KAAK,CAACC,YAAN,CAAmBrB;AAFhC,GAAP;AAIH,CALD;;AAOA,eAAenB,OAAO,CAACsC,eAAD,EAAkB;AACpCrB,EAAAA,QAAQ,EAAEhB,IAD0B;AAEpCiB,EAAAA,UAAU,EAAEhB;AAFwB,CAAlB,CAAP,CAGZW,QAHY,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { play, selectSong } from '../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\n\r\nimport { ReactComponent as Play } from '../icons/play.svg';\r\nimport { ReactComponent as Pause } from '../icons/pause.svg';\r\nimport { ReactComponent as Speaker } from '../icons/speaker.svg';\r\nimport Emoji from './emoji';\r\nimport Menu from './menu';\r\n\r\nconst StyledItem = styled.div`\r\n    width: 100%;\r\n    height: 95px;\r\n    display: flex;\r\n    padding-left: 30px;\r\n    color: ${props => props.selected ? props.theme.primaryColor : 'white'};\r\n    background-color: ${props => props.selected && 'black'};\r\n\r\n    * {\r\n        margin-right: 10px;\r\n        margin-top: 10px;\r\n    }\r\n\r\n    #playIcon {\r\n        display: none;\r\n    }\r\n\r\n    #title {\r\n        width: 700px;\r\n        height: 75%;\r\n        h3, p {\r\n            margin-top: 2px;\r\n            margin-bottom: 2px;\r\n        }\r\n    }\r\n\r\n    #meta {\r\n        display: flex;\r\n        color: white;\r\n    }\r\n\r\n    #explicit {\r\n        color: black;\r\n        margin-right: 0;\r\n        background-color: white;\r\n        border-radius: 3px;\r\n    }\r\n\r\n    .ellipsis {\r\n        display: none;\r\n        float: right;\r\n        right:90px;\r\n        color: white;\r\n    }\r\n\r\n    #date {\r\n        right: 20px;\r\n        margin-bottom: 70px;\r\n    }\r\n\r\n    &:hover {\r\n        background-color: black;\r\n        color: ${props => props.theme.primaryColor};\r\n        #soundIcon {\r\n            display: none;\r\n        }\r\n        #playIcon {\r\n            display: block;\r\n        }\r\n        .ellipsis {\r\n            display: block;\r\n        }\r\n    }\r\n`\r\n\r\nfunction SongItem({ song, selectedSongId, playing, playStop, changeSong })  {\r\n    return (\r\n        <>\r\n            <StyledItem selected={song.id===selectedSongId} onClick={() => {\r\n                // The song is selected.\r\n                changeSong(song);\r\n\r\n                //  We verify if the clicked song was made to the current playing song.\r\n                if (song.id===selectedSongId) {\r\n                    playStop(false);\r\n                } else {\r\n                    playStop(true);\r\n                }\r\n            }}>\r\n                <div id='soundIcon'>\r\n                    {song.id === selectedSongId && playing ? <Speaker /> : <Emoji name='music' />}\r\n                </div>\r\n                <div id='playIcon'>\r\n                    {song.id === selectedSongId && playing ? <Pause /> : <Play />}\r\n                </div>\r\n                <div id='title'>\r\n                    <h3>{song.name}</h3>\r\n                    <div id='meta'>\r\n                        <p id='explicit'>{song.explicit && \"EXPLICIT\"}</p>\r\n                        <p>{song.author} - {song.album}</p>\r\n                    </div>\r\n                </div>\r\n                <Menu />\r\n                <p id='date'>{song.duration.getMinutes()}:{song.duration.getSeconds()}</p>\r\n            </StyledItem>\r\n        </>\r\n    )\r\n}\r\n\r\nSongItem.defaultProps = {\r\n    song: {\r\n        id: 1, \r\n        name: \"Titulo\",\r\n        explicit: true,\r\n        author: \"Autor\",\r\n        album: \"Album\",\r\n        duration: new Date(0, 0, 0, 0, 2, 30),\r\n        like: false\r\n    }\r\n}\r\n\r\nSongItem.propTypes = {\r\n    song: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        name: PropTypes.string,\r\n        explicit: PropTypes.bool,\r\n        author: PropTypes.string,\r\n        album: PropTypes.string,\r\n        duration: PropTypes.instanceOf(Date),\r\n        like: PropTypes.bool\r\n    }),\r\n    selectedSongId: PropTypes.number.isRequired,\r\n    playing: PropTypes.bool.isRequired,\r\n    playStop: PropTypes.func.isRequired,\r\n    changeSong: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        playing: state.playing,\r\n        selectedSongId: state.selectedSong.id\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    playStop: play,\r\n    changeSong: selectSong \r\n})(SongItem);"]},"metadata":{},"sourceType":"module"}