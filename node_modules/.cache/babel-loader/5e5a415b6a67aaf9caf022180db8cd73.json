{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\javier.revilla.caro\\\\OneDrive - Accenture\\\\Documents\\\\Ejercicios\\\\music-player\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _jsxFileName = \"C:\\\\Users\\\\javier.revilla.caro\\\\OneDrive - Accenture\\\\Documents\\\\Ejercicios\\\\music-player\\\\src\\\\components\\\\cover.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { play } from '../redux/actions';\nimport PropTypes from 'prop-types';\nimport { ReactComponent as Play } from \"@svgr/webpack?-prettier,-svgo!../icons/play.svg\";\nimport { ReactComponent as Pause } from \"@svgr/webpack?-prettier,-svgo!../icons/pause.svg\";\nimport Emoji from './emoji';\nimport styled from 'styled-components';\nvar StyledButton = styled.button(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    background-color: \", \";\\n    color: white;\\n    border-radius: 25px;\\n    width: 150px;\\n    height: 50px;\\n    font-size: 20px;\\n    outline: none;\\n\\n    &:hover {\\n        background-color: \", \";\\n        width: 155px;\\n        height: 55px;\\n    }\\n\"])), function (props) {\n  return props.theme.primaryColor;\n}, function (props) {\n  return props.theme.secondaryColor;\n});\nvar StyledCover = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    width: 30%;\\n    margin-top: 5%;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n\"])));\nvar StyledOverlay = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    position: relative;\\n    width: 80%;\\n    \\n    img {\\n        opacity: \", \";\\n        display: block;\\n        width: 100%;\\n        height: auto;\\n        transition: .5s ease;\\n        backface-visibility: hidden;\\n    }\\n\\n    div {\\n        transition: .5s ease;\\n        opacity: \", \";\\n        position: absolute;\\n        top: 50%;\\n        left: 50%;\\n        transform: translate(-50%, -50%);\\n        -ms-transform: translate(-50%, -50%);\\n        text-align: center;\\n    }\\n\\n    &:hover {\\n        >img {\\n            opacity: 0.5;\\n        }\\n        >div {\\n            opacity: 1;\\n        }\\n    }\\n\"])), function (props) {\n  return props.playing ? 0.5 : 1;\n}, function (props) {\n  return props.playing ? 1 : 0;\n});\n\nfunction Cover(_ref) {\n  var songsNumber = _ref.songsNumber,\n      playing = _ref.playing,\n      playStop = _ref.playStop,\n      likedSong = _ref.likedSong;\n  return /*#__PURE__*/React.createElement(StyledCover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledOverlay, {\n    playing: playing,\n    onClick: function onClick() {\n      return playStop(!playing);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"cover.jpg\",\n    alt: \"cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, playing ? /*#__PURE__*/React.createElement(Pause, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(Play, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 44\n    }\n  }))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Your Time Capsule\"), /*#__PURE__*/React.createElement(StyledButton, {\n    onClick: function onClick() {\n      return playStop(!playing);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, playing ? 'PAUSE' : 'PLAY'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, songsNumber, \" SONGS\"), /*#__PURE__*/React.createElement(Emoji, {\n    name: likedSong ? 'heart' : 'heart-empty',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }));\n}\n\nCover.propTypes = {\n  songsNumber: PropTypes.number.isRequired,\n  playing: PropTypes.bool.isRequired,\n  playStop: PropTypes.func.isRequired,\n  likedSong: PropTypes.bool.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    playing: state.playing,\n    songsNumber: state.songs.length,\n    likedSong: state.selectedSong.like\n  };\n};\n\nexport default connect(mapStateToProps, {\n  playStop: play\n})(Cover);","map":{"version":3,"sources":["C:/Users/javier.revilla.caro/OneDrive - Accenture/Documents/Ejercicios/music-player/src/components/cover.js"],"names":["React","connect","play","PropTypes","Emoji","styled","StyledButton","button","props","theme","primaryColor","secondaryColor","StyledCover","div","StyledOverlay","playing","Cover","songsNumber","playStop","likedSong","propTypes","number","isRequired","bool","func","mapStateToProps","state","songs","length","selectedSong","like"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { play } from '../redux/actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ReactComponent as Play } from '../icons/play.svg'\r\nimport { ReactComponent as Pause } from '../icons/pause.svg'\r\nimport Emoji from './emoji'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst StyledButton = styled.button`\r\n    background-color: ${props => props.theme.primaryColor};\r\n    color: white;\r\n    border-radius: 25px;\r\n    width: 150px;\r\n    height: 50px;\r\n    font-size: 20px;\r\n    outline: none;\r\n\r\n    &:hover {\r\n        background-color: ${props => props.theme.secondaryColor};\r\n        width: 155px;\r\n        height: 55px;\r\n    }\r\n`\r\n\r\nconst StyledCover =styled.div`\r\n    width: 30%;\r\n    margin-top: 5%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`\r\n\r\nconst StyledOverlay =styled.div`\r\n    position: relative;\r\n    width: 80%;\r\n    \r\n    img {\r\n        opacity: ${props => props.playing ? 0.5 : 1};\r\n        display: block;\r\n        width: 100%;\r\n        height: auto;\r\n        transition: .5s ease;\r\n        backface-visibility: hidden;\r\n    }\r\n\r\n    div {\r\n        transition: .5s ease;\r\n        opacity: ${props => props.playing ? 1 : 0};\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        -ms-transform: translate(-50%, -50%);\r\n        text-align: center;\r\n    }\r\n\r\n    &:hover {\r\n        >img {\r\n            opacity: 0.5;\r\n        }\r\n        >div {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`\r\n\r\nfunction Cover({ songsNumber, playing, playStop, likedSong })  {\r\n    return (\r\n        <StyledCover>\r\n            <StyledOverlay playing={playing} onClick={() => playStop(!playing)}>\r\n                <img src=\"cover.jpg\" alt=\"cover\"/>\r\n                <div>\r\n                    {playing ? <Pause /> : <Play />}\r\n                </div>\r\n            </StyledOverlay>\r\n            <h3>Your Time Capsule</h3>\r\n            <StyledButton onClick={() => playStop(!playing)}>\r\n                {playing ? 'PAUSE' : 'PLAY'}\r\n            </StyledButton>\r\n            <p>\r\n                {songsNumber} SONGS\r\n            </p>\r\n            <Emoji name={likedSong ? 'heart' : 'heart-empty'} />\r\n        </StyledCover>\r\n    )\r\n}\r\n\r\nCover.propTypes = {\r\n    songsNumber: PropTypes.number.isRequired,\r\n    playing: PropTypes.bool.isRequired,\r\n    playStop: PropTypes.func.isRequired,\r\n    likedSong: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        playing: state.playing,\r\n        songsNumber: state.songs.length,\r\n        likedSong: state.selectedSong.like\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    playStop: play\r\n})(Cover);"]},"metadata":{},"sourceType":"module"}