{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\javier.revilla.caro\\\\OneDrive - Accenture\\\\Documents\\\\Ejercicios\\\\music-player\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _jsxFileName = \"C:\\\\Users\\\\javier.revilla.caro\\\\OneDrive - Accenture\\\\Documents\\\\Ejercicios\\\\music-player\\\\src\\\\components\\\\songItem.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { play, selectSong } from '../redux/actions';\nimport PropTypes from 'prop-types';\nimport { ReactComponent as Play } from \"@svgr/webpack?-prettier,-svgo!../icons/play.svg\";\nimport { ReactComponent as Pause } from \"@svgr/webpack?-prettier,-svgo!../icons/pause.svg\";\nimport { ReactComponent as Speaker } from \"@svgr/webpack?-prettier,-svgo!../icons/speaker.svg\";\nimport Emoji from './emoji';\nimport styled from 'styled-components';\nvar StyledItem = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    width: 70%;\\n    left: 0;\\n    display: flex;\\n    align-items: center;\\n    justify-content: flex-start;\\n    padding-left: 30px;\\n    color: \", \";\\n    background-color: \", \";\\n\\n    * {\\n        margin-right: 10px;\\n    }\\n\\n    #soundIcon {\\n        margin-bottom: 50px;\\n    }\\n\\n    #playIcon {\\n        display: none;\\n        margin-bottom: 50px;\\n    }\\n\\n    #meta {\\n        display: flex;\\n        color: white;\\n    }\\n\\n    #explicit {\\n        color: black;\\n        background-color: white;\\n        border-radius: 3px;\\n    }\\n\\n    .ellipsis {\\n        display: none;\\n        position: absolute;\\n        right:90px;\\n        color: white;\\n        margin-bottom: 50px;\\n    }\\n\\n    #date {\\n        position: absolute;\\n        right: 20px;\\n        margin-bottom: 70px;\\n    }\\n\\n    &:hover {\\n        background-color: black;\\n        color: \", \";\\n        #soundIcon {\\n            display: none;\\n        }\\n        #playIcon {\\n            display: block;\\n        }\\n        .ellipsis {\\n            display: block;\\n        }\\n    }\\n\"])), function (props) {\n  return props.selected ? props.theme.primaryColor : 'white';\n}, function (props) {\n  return props.selected && 'black';\n}, function (props) {\n  return props.theme.primaryColor;\n});\n\nfunction SongItem(_ref) {\n  var song = _ref.song,\n      selectedSong = _ref.selectedSong,\n      playing = _ref.playing,\n      playStop = _ref.playStop,\n      selectSong = _ref.selectSong;\n  return /*#__PURE__*/React.createElement(StyledItem, {\n    selected: song.id === selectedSong,\n    onClick: function onClick() {\n      selectSong(song);\n      playStop(!playing);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"soundIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, song.id === selectedSong && playing ? /*#__PURE__*/React.createElement(Speaker, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 56\n    }\n  }) : /*#__PURE__*/React.createElement(Emoji, {\n    name: \"music\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 70\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"playIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, song.id === selectedSong && playing ? /*#__PURE__*/React.createElement(Pause, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 56\n    }\n  }) : /*#__PURE__*/React.createElement(Play, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 68\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, song.name), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"meta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"explicit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, song.explicit && \"EXPLICIT\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, song.author, \" - \", song.album))), /*#__PURE__*/React.createElement(Emoji, {\n    name: \"ellipsis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, song.duration.getMinutes(), \":\", song.duration.getSeconds()));\n}\n\nSongItem.defaultProps = {\n  song: {\n    id: 1,\n    name: \"Titulo\",\n    explicit: true,\n    author: \"Autor\",\n    album: \"Album\",\n    duration: new Date(0, 0, 0, 0, 2, 30),\n    like: false\n  },\n  selectedSong: 1\n};\nSongItem.propTypes = {\n  song: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    explicit: PropTypes.bool,\n    author: PropTypes.string,\n    album: PropTypes.string,\n    duration: PropTypes.instanceOf(Date),\n    like: PropTypes.bool\n  }),\n  selectedSong: PropTypes.number.isRequired,\n  playing: PropTypes.bool.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    playing: state.playing,\n    selectedSong: state.selectedSong.id\n  };\n};\n\nexport default connect(mapStateToProps, {\n  playStop: play,\n  changeSong: selectSong\n})(SongItem);","map":{"version":3,"sources":["C:/Users/javier.revilla.caro/OneDrive - Accenture/Documents/Ejercicios/music-player/src/components/songItem.js"],"names":["React","connect","play","selectSong","PropTypes","Emoji","styled","StyledItem","div","props","selected","theme","primaryColor","SongItem","song","selectedSong","playing","playStop","id","name","explicit","author","album","duration","getMinutes","getSeconds","defaultProps","Date","like","propTypes","shape","number","string","bool","instanceOf","isRequired","mapStateToProps","state","changeSong"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { play, selectSong } from '../redux/actions'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ReactComponent as Play } from '../icons/play.svg'\r\nimport { ReactComponent as Pause } from '../icons/pause.svg'\r\nimport { ReactComponent as Speaker } from '../icons/speaker.svg'\r\nimport Emoji from './emoji'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst StyledItem =styled.div`\r\n    width: 70%;\r\n    left: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    padding-left: 30px;\r\n    color: ${props => props.selected ? props.theme.primaryColor : 'white'};\r\n    background-color: ${props => props.selected && 'black'};\r\n\r\n    * {\r\n        margin-right: 10px;\r\n    }\r\n\r\n    #soundIcon {\r\n        margin-bottom: 50px;\r\n    }\r\n\r\n    #playIcon {\r\n        display: none;\r\n        margin-bottom: 50px;\r\n    }\r\n\r\n    #meta {\r\n        display: flex;\r\n        color: white;\r\n    }\r\n\r\n    #explicit {\r\n        color: black;\r\n        background-color: white;\r\n        border-radius: 3px;\r\n    }\r\n\r\n    .ellipsis {\r\n        display: none;\r\n        position: absolute;\r\n        right:90px;\r\n        color: white;\r\n        margin-bottom: 50px;\r\n    }\r\n\r\n    #date {\r\n        position: absolute;\r\n        right: 20px;\r\n        margin-bottom: 70px;\r\n    }\r\n\r\n    &:hover {\r\n        background-color: black;\r\n        color: ${props => props.theme.primaryColor};\r\n        #soundIcon {\r\n            display: none;\r\n        }\r\n        #playIcon {\r\n            display: block;\r\n        }\r\n        .ellipsis {\r\n            display: block;\r\n        }\r\n    }\r\n`\r\n\r\nfunction SongItem({ song, selectedSong, playing, playStop, selectSong })  {\r\n    return (\r\n        <StyledItem selected={song.id===selectedSong} onClick={() => {\r\n            selectSong(song);\r\n            playStop(!playing);\r\n        }}>\r\n            <div id='soundIcon'>\r\n                {song.id === selectedSong && playing ? <Speaker /> : <Emoji name='music' />}\r\n            </div>\r\n            <div id='playIcon'>\r\n                {song.id === selectedSong && playing ? <Pause /> : <Play />}\r\n            </div>\r\n            <div>\r\n                <h3>{song.name}</h3>\r\n                <div id='meta'>\r\n                    <p id='explicit'>{song.explicit && \"EXPLICIT\"}</p>\r\n                    <p>{song.author} - {song.album}</p>\r\n                </div>\r\n            </div>\r\n            <Emoji name='ellipsis'/>\r\n            <p id='date'>{song.duration.getMinutes()}:{song.duration.getSeconds()}</p>\r\n        </StyledItem>\r\n    )\r\n}\r\n\r\nSongItem.defaultProps = {\r\n    song: {\r\n        id: 1, \r\n        name: \"Titulo\",\r\n        explicit: true,\r\n        author: \"Autor\",\r\n        album: \"Album\",\r\n        duration: new Date(0, 0, 0, 0, 2, 30),\r\n        like: false\r\n    },\r\n    selectedSong: 1,\r\n}\r\n\r\nSongItem.propTypes = {\r\n    song: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        name: PropTypes.string,\r\n        explicit: PropTypes.bool,\r\n        author: PropTypes.string,\r\n        album: PropTypes.string,\r\n        duration: PropTypes.instanceOf(Date),\r\n        like: PropTypes.bool\r\n    }),\r\n    selectedSong: PropTypes.number.isRequired,\r\n    playing: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        playing: state.playing,\r\n        selectedSong: state.selectedSong.id\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    playStop: play,\r\n    changeSong: selectSong \r\n})(SongItem);"]},"metadata":{},"sourceType":"module"}