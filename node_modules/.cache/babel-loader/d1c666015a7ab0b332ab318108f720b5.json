{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\javier.revilla.caro\\\\OneDrive - Accenture\\\\Documents\\\\Ejercicios\\\\music-player\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _jsxFileName = \"C:\\\\Users\\\\javier.revilla.caro\\\\OneDrive - Accenture\\\\Documents\\\\Ejercicios\\\\music-player\\\\src\\\\components\\\\songItem.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ReactComponent as Play } from \"@svgr/webpack?-prettier,-svgo!../icons/play.svg\";\nimport { ReactComponent as Speaker } from \"@svgr/webpack?-prettier,-svgo!../icons/speaker.svg\";\nimport Emoji from './emoji';\nimport styled from 'styled-components';\nvar StyledItem = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    left: 0;\\n    width: 30%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: left;\\n\\n    #explicit {\\n        color: black;\\n        background-color: white;\\n        border-radius: 3px;\\n    }\\n\\n    span {\\n        position: absolute;\\n        right: 0;\\n    }\\n\"])));\n\nfunction SongItem(_ref) {\n  var song = _ref.song,\n      selectedSong = _ref.selectedSong,\n      playing = _ref.playing;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, song.id === selectedSong ? playing ? /*#__PURE__*/React.createElement(Speaker, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 37\n    }\n  }) : /*#__PURE__*/React.createElement(Play, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 51\n    }\n  }) : /*#__PURE__*/React.createElement(Emoji, {\n    name: \"music\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, song.name), /*#__PURE__*/React.createElement(Emoji, {\n    name: \"ellipsis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(StyledItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"explicit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, song.explicit && \"EXPLICIT\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, song.author, \" - \", song.album)));\n}\n\nSongItem.defaultProps = {\n  song: {\n    id: 1,\n    name: \"Titulo\",\n    explicit: true,\n    author: \"Autor\",\n    album: \"Album\"\n  },\n  selectedSong: 1\n};\nSongItem.propTypes = {\n  song: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    explicit: PropTypes.bool,\n    author: PropTypes.string,\n    album: PropTypes.string\n  }),\n  selectedSong: PropTypes.number,\n  playing: PropTypes.bool.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    playing: state.playing\n  };\n};\n\nexport default connect(mapStateToProps)(SongItem);","map":{"version":3,"sources":["C:/Users/javier.revilla.caro/OneDrive - Accenture/Documents/Ejercicios/music-player/src/components/songItem.js"],"names":["React","connect","PropTypes","Emoji","styled","StyledItem","div","SongItem","song","selectedSong","playing","id","name","explicit","author","album","defaultProps","propTypes","shape","number","string","bool","isRequired","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAIA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,UAAU,GAAED,MAAM,CAACE,GAAT,qWAAhB;;AAmBA,SAASC,QAAT,OAAoD;AAAA,MAAhCC,IAAgC,QAAhCA,IAAgC;AAAA,MAA1BC,YAA0B,QAA1BA,YAA0B;AAAA,MAAZC,OAAY,QAAZA,OAAY;AAChD,sBACI,uDACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACG,EAAL,KAAUF,YAAV,GACKC,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAiB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD7B,gBAEK,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHV,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACI,IAAV,CAPJ,eAQI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,eAWI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBJ,IAAI,CAACK,QAAL,IAAiB,UAAnC,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,IAAI,CAACM,MAAT,SAAoBN,IAAI,CAACO,KAAzB,CAFJ,CAXJ,CADJ;AAkBH;;AAEDR,QAAQ,CAACS,YAAT,GAAwB;AACpBR,EAAAA,IAAI,EAAE;AAACG,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,QAAd;AAAwBC,IAAAA,QAAQ,EAAE,IAAlC;AAAwCC,IAAAA,MAAM,EAAE,OAAhD;AAAyDC,IAAAA,KAAK,EAAE;AAAhE,GADc;AAEpBN,EAAAA,YAAY,EAAE;AAFM,CAAxB;AAKAF,QAAQ,CAACU,SAAT,GAAqB;AACjBT,EAAAA,IAAI,EAAEN,SAAS,CAACgB,KAAV,CAAgB;AAClBP,IAAAA,EAAE,EAAET,SAAS,CAACiB,MADI;AAElBP,IAAAA,IAAI,EAAEV,SAAS,CAACkB,MAFE;AAGlBP,IAAAA,QAAQ,EAAEX,SAAS,CAACmB,IAHF;AAIlBP,IAAAA,MAAM,EAAEZ,SAAS,CAACkB,MAJA;AAKlBL,IAAAA,KAAK,EAAEb,SAAS,CAACkB;AALC,GAAhB,CADW;AAQjBX,EAAAA,YAAY,EAAEP,SAAS,CAACiB,MARP;AASjBT,EAAAA,OAAO,EAAER,SAAS,CAACmB,IAAV,CAAeC;AATP,CAArB;;AAYA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHd,IAAAA,OAAO,EAAEc,KAAK,CAACd;AADZ,GAAP;AAGH,CAJD;;AAMA,eAAeT,OAAO,CAACsB,eAAD,CAAP,CAAyBhB,QAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ReactComponent as Play } from '../icons/play.svg'\r\nimport { ReactComponent as Speaker } from '../icons/speaker.svg'\r\nimport Emoji from './emoji'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst StyledItem =styled.div`\r\n    left: 0;\r\n    width: 30%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: left;\r\n\r\n    #explicit {\r\n        color: black;\r\n        background-color: white;\r\n        border-radius: 3px;\r\n    }\r\n\r\n    span {\r\n        position: absolute;\r\n        right: 0;\r\n    }\r\n`\r\n\r\nfunction SongItem({ song, selectedSong, playing })  {\r\n    return (\r\n        <>\r\n            <StyledItem>\r\n                <div>\r\n                    {song.id===selectedSong \r\n                        ? playing ? <Speaker /> : <Play />\r\n                        : <Emoji name='music' />\r\n                    }\r\n                </div>\r\n                <h3>{song.name}</h3>\r\n                <Emoji name='ellipsis'/>\r\n            </StyledItem>\r\n            <StyledItem>\r\n                <p id='explicit'>{song.explicit && \"EXPLICIT\"}</p>\r\n                <p>{song.author} - {song.album}</p>\r\n            </StyledItem>\r\n        </>\r\n    )\r\n}\r\n\r\nSongItem.defaultProps = {\r\n    song: {id: 1, name: \"Titulo\", explicit: true, author: \"Autor\", album: \"Album\"},\r\n    selectedSong: 1,\r\n}\r\n\r\nSongItem.propTypes = {\r\n    song: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        name: PropTypes.string,\r\n        explicit: PropTypes.bool,\r\n        author: PropTypes.string,\r\n        album: PropTypes.string\r\n    }),\r\n    selectedSong: PropTypes.number,\r\n    playing: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        playing: state.playing\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SongItem);"]},"metadata":{},"sourceType":"module"}