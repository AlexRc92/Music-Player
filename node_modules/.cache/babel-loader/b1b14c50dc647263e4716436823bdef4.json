{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\javier.revilla.caro\\\\OneDrive - Accenture\\\\Documents\\\\Ejercicios\\\\music-player\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _jsxFileName = \"C:\\\\Users\\\\javier.revilla.caro\\\\OneDrive - Accenture\\\\Documents\\\\Ejercicios\\\\music-player\\\\src\\\\components\\\\songList.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport SongItem from './songItem';\nvar StyledList = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    height: 100%;\\n    width: 70%;\\n    display: flex;\\n    flex-direction: column;\\n\"])));\n\nfunction SongList(_ref) {\n  var _this = this;\n\n  var songs = _ref.songs;\n  return /*#__PURE__*/React.createElement(StyledList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, songs.map(function (song) {\n    return /*#__PURE__*/React.createElement(SongItem, {\n      song: true,\n      key: song.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 34\n      }\n    });\n  }));\n}\n\nSongItem.propTypes = {\n  songs: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    explicit: PropTypes.bool,\n    author: PropTypes.string,\n    album: PropTypes.string,\n    duration: PropTypes.instanceOf(Date),\n    like: PropTypes.bool\n  })).isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    songs: state.songs\n  };\n};\n\nexport default connect(mapStateToProps)(SongList);","map":{"version":3,"sources":["C:/Users/javier.revilla.caro/OneDrive - Accenture/Documents/Ejercicios/music-player/src/components/songList.js"],"names":["React","connect","PropTypes","styled","SongItem","StyledList","div","SongList","songs","map","song","id","propTypes","arrayOf","shape","number","name","string","explicit","bool","author","album","duration","instanceOf","Date","like","isRequired","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,UAAU,GAAGF,MAAM,CAACG,GAAV,4JAAhB;;AAOA,SAASC,QAAT,OAA8B;AAAA;;AAAA,MAAVC,KAAU,QAAVA,KAAU;AAC1B,sBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,wBAAU,oBAAC,QAAD;AAAU,MAAA,IAAI,MAAd;AAAe,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AAAA,GAAV,CADL,CADJ;AAKH;;AAEDP,QAAQ,CAACQ,SAAT,GAAqB;AACjBJ,EAAAA,KAAK,EAAEN,SAAS,CAACW,OAAV,CAAkBX,SAAS,CAACY,KAAV,CAAgB;AACrCH,IAAAA,EAAE,EAAET,SAAS,CAACa,MADuB;AAErCC,IAAAA,IAAI,EAAEd,SAAS,CAACe,MAFqB;AAGrCC,IAAAA,QAAQ,EAAEhB,SAAS,CAACiB,IAHiB;AAIrCC,IAAAA,MAAM,EAAElB,SAAS,CAACe,MAJmB;AAKrCI,IAAAA,KAAK,EAAEnB,SAAS,CAACe,MALoB;AAMrCK,IAAAA,QAAQ,EAAEpB,SAAS,CAACqB,UAAV,CAAqBC,IAArB,CAN2B;AAOrCC,IAAAA,IAAI,EAAEvB,SAAS,CAACiB;AAPqB,GAAhB,CAAlB,EAQHO;AATa,CAArB;;AAYA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHpB,IAAAA,KAAK,EAAEoB,KAAK,CAACpB;AADV,GAAP;AAGH,CAJD;;AAMA,eAAeP,OAAO,CAAC0B,eAAD,CAAP,CAAyBpB,QAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\n\r\nimport SongItem from './songItem';\r\n\r\nconst StyledList = styled.div`\r\n    height: 100%;\r\n    width: 70%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nfunction SongList({ songs })  {\r\n    return (\r\n        <StyledList>\r\n            {songs.map((song) => <SongItem song key={song.id} />)}\r\n        </StyledList>\r\n    )\r\n}\r\n\r\nSongItem.propTypes = {\r\n    songs: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number,\r\n        name: PropTypes.string,\r\n        explicit: PropTypes.bool,\r\n        author: PropTypes.string,\r\n        album: PropTypes.string,\r\n        duration: PropTypes.instanceOf(Date),\r\n        like: PropTypes.bool\r\n    })).isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        songs: state.songs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SongList);"]},"metadata":{},"sourceType":"module"}